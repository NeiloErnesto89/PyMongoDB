{"filter":false,"title":"mongo_project.py","tooltip":"/mongo_project.py","undoManager":{"mark":18,"position":18,"stack":[[{"start":{"row":78,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":79,"column":0},"end":{"row":80,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":79,"column":0},"end":{"row":96,"column":49},"action":"insert","lines":["def edit_record():","    doc = get_record()","    if doc:","        update_doc = {}","        print(\"\")","        for k, v in doc.items():","            if k != \"_id\":","                update_doc[k] = input(k.capitalize() + \" [\" + v + \"] > \")","","                if update_doc[k] == \"\":","                    update_doc[k] = v","        ","        try:","            coll.update_one(doc, {'$set': update_doc})","            print(\"\")","            print(\"Document updated\")","        except:","            print(\"Error accessing the database\")"],"id":4}],[{"start":{"row":89,"column":37},"end":{"row":89,"column":38},"action":"insert","lines":[" "],"id":5},{"start":{"row":89,"column":38},"end":{"row":89,"column":39},"action":"insert","lines":["£"]}],[{"start":{"row":89,"column":39},"end":{"row":89,"column":40},"action":"insert","lines":[" "],"id":6}],[{"start":{"row":89,"column":39},"end":{"row":89,"column":40},"action":"remove","lines":[" "],"id":7},{"start":{"row":89,"column":38},"end":{"row":89,"column":39},"action":"remove","lines":["£"]}],[{"start":{"row":89,"column":38},"end":{"row":89,"column":39},"action":"insert","lines":["#"],"id":8}],[{"start":{"row":89,"column":39},"end":{"row":89,"column":40},"action":"insert","lines":[" "],"id":9},{"start":{"row":89,"column":40},"end":{"row":89,"column":41},"action":"insert","lines":["i"]},{"start":{"row":89,"column":41},"end":{"row":89,"column":42},"action":"insert","lines":["f"]}],[{"start":{"row":89,"column":42},"end":{"row":89,"column":43},"action":"insert","lines":[" "],"id":10},{"start":{"row":89,"column":43},"end":{"row":89,"column":44},"action":"insert","lines":["a"]}],[{"start":{"row":89,"column":44},"end":{"row":89,"column":45},"action":"insert","lines":["d"],"id":11},{"start":{"row":89,"column":45},"end":{"row":89,"column":46},"action":"insert","lines":["d"]},{"start":{"row":89,"column":46},"end":{"row":89,"column":47},"action":"insert","lines":["e"]}],[{"start":{"row":89,"column":46},"end":{"row":89,"column":47},"action":"remove","lines":["e"],"id":12}],[{"start":{"row":89,"column":46},"end":{"row":89,"column":47},"action":"insert","lines":["i"],"id":13},{"start":{"row":89,"column":47},"end":{"row":89,"column":48},"action":"insert","lines":["n"]},{"start":{"row":89,"column":48},"end":{"row":89,"column":49},"action":"insert","lines":["g"]}],[{"start":{"row":89,"column":49},"end":{"row":89,"column":50},"action":"insert","lines":[" "],"id":14},{"start":{"row":89,"column":50},"end":{"row":89,"column":51},"action":"insert","lines":["n"]},{"start":{"row":89,"column":51},"end":{"row":89,"column":52},"action":"insert","lines":["o"]},{"start":{"row":89,"column":52},"end":{"row":89,"column":53},"action":"insert","lines":["t"]},{"start":{"row":89,"column":53},"end":{"row":89,"column":54},"action":"insert","lines":["h"]},{"start":{"row":89,"column":54},"end":{"row":89,"column":55},"action":"insert","lines":["i"]},{"start":{"row":89,"column":55},"end":{"row":89,"column":56},"action":"insert","lines":["n"]},{"start":{"row":89,"column":56},"end":{"row":89,"column":57},"action":"insert","lines":["g"]},{"start":{"row":89,"column":57},"end":{"row":89,"column":58},"action":"insert","lines":[","]}],[{"start":{"row":89,"column":58},"end":{"row":89,"column":59},"action":"insert","lines":[" "],"id":15},{"start":{"row":89,"column":59},"end":{"row":89,"column":60},"action":"insert","lines":["k"]},{"start":{"row":89,"column":60},"end":{"row":89,"column":61},"action":"insert","lines":["e"]},{"start":{"row":89,"column":61},"end":{"row":89,"column":62},"action":"insert","lines":["e"]},{"start":{"row":89,"column":62},"end":{"row":89,"column":63},"action":"insert","lines":["p"]}],[{"start":{"row":89,"column":63},"end":{"row":89,"column":64},"action":"insert","lines":[" "],"id":16},{"start":{"row":89,"column":64},"end":{"row":89,"column":65},"action":"insert","lines":["i"]},{"start":{"row":89,"column":65},"end":{"row":89,"column":66},"action":"insert","lines":["t"]}],[{"start":{"row":89,"column":66},"end":{"row":89,"column":67},"action":"insert","lines":[" "],"id":17},{"start":{"row":89,"column":67},"end":{"row":89,"column":68},"action":"insert","lines":["t"]},{"start":{"row":89,"column":68},"end":{"row":89,"column":69},"action":"insert","lines":["h"]},{"start":{"row":89,"column":69},"end":{"row":89,"column":70},"action":"insert","lines":["e"]}],[{"start":{"row":89,"column":70},"end":{"row":89,"column":71},"action":"insert","lines":[" "],"id":18},{"start":{"row":89,"column":71},"end":{"row":89,"column":72},"action":"insert","lines":["s"]},{"start":{"row":89,"column":72},"end":{"row":89,"column":73},"action":"insert","lines":["a"]},{"start":{"row":89,"column":73},"end":{"row":89,"column":74},"action":"insert","lines":["m"]},{"start":{"row":89,"column":74},"end":{"row":89,"column":75},"action":"insert","lines":["e"]}],[{"start":{"row":106,"column":12},"end":{"row":106,"column":47},"action":"remove","lines":["print(\"You have selected option 3\")"],"id":19},{"start":{"row":106,"column":12},"end":{"row":106,"column":13},"action":"insert","lines":["e"]},{"start":{"row":106,"column":13},"end":{"row":106,"column":14},"action":"insert","lines":["d"]},{"start":{"row":106,"column":14},"end":{"row":106,"column":15},"action":"insert","lines":["i"]},{"start":{"row":106,"column":15},"end":{"row":106,"column":16},"action":"insert","lines":["t"]}],[{"start":{"row":106,"column":12},"end":{"row":106,"column":16},"action":"remove","lines":["edit"],"id":20},{"start":{"row":106,"column":12},"end":{"row":106,"column":25},"action":"insert","lines":["edit_record()"]}],[{"start":{"row":0,"column":0},"end":{"row":122,"column":31},"action":"remove","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\") # MongoURI from environment variable","DBS_NAME = \"myTestDB\" #caps lock needed !","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        #print(\"Mongo is connected!\")","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e","        ","def show_menu():","    print(\"\") #blank - CRUD","    print(\"1. Add a record\")","    print(\"2. Find a record by name\")","    print(\"3. Edit a record\")","    print(\"4. Delete a record\")","    print(\"5. Exit\")","    ","    option = input(\"Enter an option: \")","    return option","    ","def get_record(): # helper funct to allow for finding and edit later on. Reuse","    print(\"\") # finding based on names","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","    ","    try: ","        doc = coll.find_one({'first': first.lower(), 'last': last.lower()})","    except:","        print(\"Error accessing the database\")","        ","    if not doc:","        print(\"\")","        print(\"Error! No results found.\")","    ","    return doc","","    ","def add_record(): # the data we are looking for","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","    dob = input(\"Enter date of birth > \")","    gender = input(\"Enter gender > \")","    hair_colour = input(\"Enter hair colour > \")","    occupation = input(\"Enter occupation > \")","    nationality = input(\"Enter nationality > \")","    ","    #new variable new_doc. lower case for ease of search ","    ","    new_doc = {'first': first.lower(), 'last': last.lower(), 'dob': dob,","               'gender': gender, 'hair_colour': hair_colour, 'occupation':","               occupation, 'nationality': nationality}","","    try:","        coll.insert(new_doc)","        print(\"\")","        print(\"Document inserted\")","    except:","        print(\"Error accessing the database\")","","def find_record():","    # define var with gets records of our get_record(), which is helper() to find info ","    doc = get_record()","    #have cursor object here, contains results ","    if doc:","        print(\"\")","        for k,v in doc.items(): #key, value","            #use items method here to iterate through each step in dict","            if k!= \"_id\": ","                #if key is not equal to ID, which is default key created by Mongo","                print(k.capitalize() + \": \" + v.capitalize())","                    ","","def edit_record():","    doc = get_record()","    if doc:","        update_doc = {}","        print(\"\")","        for k, v in doc.items():","            if k != \"_id\":","                update_doc[k] = input(k.capitalize() + \" [\" + v + \"] > \")","","                if update_doc[k] == \"\":","                    update_doc[k] = v # if adding nothing, keep it the same","        ","        try:","            coll.update_one(doc, {'$set': update_doc})","            print(\"\")","            print(\"Document updated\")","        except:","            print(\"Error accessing the database\")","            ","def main_loop():","    while True:","        option = show_menu()","        if option == \"1\":","            add_record()","        elif option == \"2\":","            find_record()","        elif option == \"3\":","            edit_record()","        elif option == \"4\":","            print(\"You have selected option 4\")","        elif option == \"5\":","            conn.close()","            break","        else: ","            print(\"Invalid\")","        print(\"\") # this section is the main loop","        ","","        ","conn = mongo_connect(MONGODB_URI) #calls mongo connection","","coll = conn[DBS_NAME][COLLECTION_NAME] # create mdb collection","","main_loop() # calling main loop"],"id":21},{"start":{"row":0,"column":0},"end":{"row":141,"column":0},"action":"insert","lines":["import pymongo","import os","","MONGODB_URI = os.getenv(\"MONGO_URI\")","DBS_NAME = \"myTestDB\"","COLLECTION_NAME = \"myFirstMDB\"","","def mongo_connect(url):","    try:","        conn = pymongo.MongoClient(url)","        print(\"Mongo is connected!\")","        return conn","    except pymongo.errors.ConnectionFailure as e:","        print(\"Could not connect to MongoDB: %s\") % e","","","def get_record():","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","","    try:","        doc = coll.find_one({'first': first.lower(), 'last': last.lower()})","    except:","        print(\"Error accessing the database\")","    ","    if not doc:","        print(\"\")","        print(\"Error! No results found.\")","    ","    return doc","","","def show_menu():","    print(\"\")","    print(\"1. Add a record\")","    print(\"2. Find a record by name\")","    print(\"3. Edit a record\")","    print(\"4. Delete a record\")","    print(\"5. Exit\")","","    option = input(\"Enter option: \")","    return option","","","def add_record():","    print(\"\")","    first = input(\"Enter first name > \")","    last = input(\"Enter last name > \")","    dob = input(\"Enter date of birth > \")","    gender = input(\"Enter gender > \")","    hair_colour = input(\"Enter hair colour > \")","    occupation = input(\"Enter occupation > \")","    nationality = input(\"Enter nationality > \")","","    new_doc = {'first': first.lower(), 'last': last.lower(), 'dob': dob,","               'gender': gender, 'hair_colour': hair_colour, 'occupation':","               occupation, 'nationality': nationality}","    ","    try:","        coll.insert(new_doc)","        print(\"\")","        print(\"Document inserted\")","    except:","        print(\"Error accessing the database\")","","","def find_record():","    doc = get_record()","    if doc:","        print(\"\")","        for k, v in doc.items():","            if k != \"_id\":","                print(k.capitalize() + \": \" + v.capitalize())","","","def edit_record():","    doc = get_record()","    if doc:","        update_doc = {}","        print(\"\")","        for k, v in doc.items():","            if k != \"_id\":","                update_doc[k] = input(k.capitalize() + \" [\" + v + \"] > \")","","                if update_doc[k] == \"\":","                    update_doc[k] = v","        ","        try:","            coll.update_one(doc, {'$set': update_doc})","            print(\"\")","            print(\"Document updated\")","        except:","            print(\"Error accessing the database\")","","","def delete_record():","","    doc = get_record()","","    if doc:","        print(\"\")","        for k, v in doc.items():","            if k != \"_id\":","                print(k.capitalize() + \": \" + v.capitalize())","        ","        print(\"\")","        confirmation = input(\"Is this the document you want to delete?\\nY or N > \")","        print(\"\")","","        if confirmation.lower() == 'y':","            try:","                coll.remove(doc)","                print(\"Document deleted!\")","            except:","                print(\"Document not deleted\")","","","def main_loop():","    while True:","        option = show_menu()","        if option == \"1\":","            add_record()","        elif option == \"2\":","            find_record()","        elif option == \"3\":","            edit_record()","        elif option == \"4\":","            delete_record()","        elif option == \"5\":","            conn.close()","            break","        else:","            print(\"Invalid option\")","        print(\"\")","","","conn = mongo_connect(MONGODB_URI)","coll = conn[DBS_NAME][COLLECTION_NAME]","","main_loop()",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":112,"column":32},"end":{"row":112,"column":32},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":true,"wrapToView":true},"firstLineState":0},"timestamp":1575313539558,"hash":"6629b3313b3df680ece3645307280d42a7ff3502"}